Version 1:
 ✔ converts raw USAC events to rcn.io format @done(2017-10-18) @project(Version 1)
 ✔ validates them with schema @done(2017-10-18) @project(Version 1)
 ✔ unit tests will be run as part of regular build enforsing additional constrains @done(2017-10-18) @project(Version 1)


Version 2:
- support multi-type events
  - validate that permit has same id
- support multi-day events
  - big question is how to do it
    - create multiple events and interlink those
      - pro: easier to show in the calendar
      - cons: is additional query logic to put this all together
      - cons: harder to cross-reference events
    - or create one multi-day event with dates array
      - pro: easier to convert events and cross-reference
      - cons: harder to show in the calendar that has to be handled on UI level
      - cons: we can't customize these types events per day
      - cons: do we count this as one event or miltiple? simple "events.length" won't represent
      number of events anymore
    - support both multi-day and interlinked events since they are slightly different beast
      - multi-day events are good for when no customization is needed
- load previous events and do lookups
  ✔ by permit @done(2017-10-18)
    ✔ compare if date is shortSegmentName @done(2017-10-18)
      ✔ if not same, create a copy of the event and mark old one as moved @done(2017-10-18)
  - consider https://www.npmjs.com/package/difflet when events are different
  - if permit is not available do lookup by name + date
✔ lookup promoters by name? @done(2017-10-18)
✔ if we have some events that are no longer on USAC @done(2017-10-18)
  ✔ mark those as "Cancelled", store info when it disappreared @done(2017-10-18)

Version 3:
  - setup recurrent AWS lambda execution (cheep)
    - calculate request limit, make sure it's < 2000 day
    - figure out Lambda external API
    - notify in slack that it runned successufly and about errors

Version 4:
 - test this on other state
  - fix few functions (in todo comments) to work with states list, not just CA
 - ability to fix up event data per event on data level, when parsing fails we would be able to fix it
